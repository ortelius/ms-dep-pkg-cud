{
  "openapi": "3.1.0",
  "info": {
    "title": "ortelius-ms-dep-pkg-cud",
    "description": "\nRestAPI endpoint for adding SBOM data to a component\n\n![Release](https://img.shields.io/github/v/release/ortelius/ms-dep-pkg-cud?sort=semver)\n![license](https://img.shields.io/github/license/ortelius/ms-dep-pkg-cud)\n\n![Build](https://img.shields.io/github/actions/workflow/status/ortelius/ms-dep-pkg-cud/build-push-chart.yml)\n[![MegaLinter](https://github.com/ortelius/ms-dep-pkg-cud/workflows/MegaLinter/badge.svg?branch=main)](https://github.com/ortelius/ms-dep-pkg-cud/actions?query=workflow%3AMegaLinter+branch%3Amain)\n![CodeQL](https://github.com/ortelius/ms-dep-pkg-cud/workflows/CodeQL/badge.svg)\n[![OpenSSF\n-Scorecard](https://api.securityscorecards.dev/projects/github.com/ortelius/ms-dep-pkg-cud/badge)](https://api.securityscorecards.dev/projects/github.com/ortelius/ms-dep-pkg-cud)\n\n\n![Discord](https://img.shields.io/discord/722468819091849316)\n",
    "contact": {
      "name": "Ortelius Open Source Project",
      "url": "https://github.com/ortelius/ortelius/issues",
      "email": "support@ortelius.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "10.0.0"
  },
  "servers": [
    { "url": "http://localhost:5003", "description": "Local Server" }
  ],
  "paths": {
    "/health": {
      "get": {
        "tags": ["health"],
        "summary": "Health",
        "description": "This health check end point used by Kubernetes",
        "operationId": "health_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/StatusMsg" }
              }
            }
          }
        }
      }
    },
    "/msapi/deppkg": {
      "get": {
        "summary": "Sbom Type",
        "description": "This is the end point used determine the type of SBOM format this microservice can handle",
        "operationId": "sbom_type_msapi_deppkg_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/msapi/deppkg/cyclonedx": {
      "post": {
        "tags": ["cyclonedx"],
        "summary": "Cyclonedx",
        "description": "This is the end point used to upload a CycloneDX SBOM",
        "operationId": "cyclonedx_msapi_deppkg_cyclonedx_post",
        "parameters": [
          {
            "name": "compid",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "title": "Compid" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/msapi/deppkg/spdx": {
      "post": {
        "tags": ["spdx"],
        "summary": "Spdx",
        "description": "This is the end point used to upload a SPDX SBOM",
        "operationId": "spdx_msapi_deppkg_spdx_post",
        "parameters": [
          {
            "name": "compid",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "title": "Compid" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/msapi/deppkg/safety": {
      "post": {
        "tags": ["safety"],
        "summary": "Safety",
        "description": "This is the end point used to upload a Python Safety SBOM",
        "operationId": "safety_msapi_deppkg_safety_post",
        "parameters": [
          {
            "name": "compid",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "title": "Compid" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/msapi/purl2comp": {
      "post": {
        "summary": "Purl2Comp",
        "description": "This is the end point used to create a component from a purl",
        "operationId": "purl2comp_msapi_purl2comp_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": { "$ref": "#/components/schemas/ValidationError" },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "StatusMsg": {
        "properties": {
          "status": { "type": "string", "title": "Status", "default": "" },
          "service_name": {
            "type": "string",
            "title": "Service Name",
            "default": ""
          }
        },
        "type": "object",
        "title": "StatusMsg"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] },
            "type": "array",
            "title": "Location"
          },
          "msg": { "type": "string", "title": "Message" },
          "type": { "type": "string", "title": "Error Type" }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    }
  },
  "tags": [
    { "name": "health", "description": "health check end point" },
    { "name": "cyclonedx", "description": "CycloneDX Upload end point" },
    { "name": "spdx", "description": "SPDX Upload end point" },
    { "name": "safety", "description": "Python Safety Upload end point" }
  ]
}
